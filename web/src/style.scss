/* rest */
* {
  box-sizing: border-box;
  outline: none;
}

html {
  font-size: 13px;
}

body {
  margin: 0;
  font-family: Arial, Helvetica, sans-serif;
  line-height: 1.2em;
  background-color: #fff;
}


// colors
$colors:('primary':#ffffff,
  'white':#fff,
  'black':#333333,
  'grey':#999999,
  'red':red);

@each $colorKey,
$color in $colors {

  // 字体颜色
  .text-#{$colorKey} {
    color: $color
  }

  // 背景颜色
  .bg-#{$colorKey} {
    background-color: $color;
  }
}


// text
// 文本左中右对齐
@each $var in (left, center, right) {
  .text-#{$var} {
    text-align: $var;
  }
}

// 字体大小
$base-font-size:1rem; //13
$font-sizes:(sm:0.9231, //12px
  md:1, //13px
  lg:1.0769, //14px
  xl:1.1538, //15px
  xxl:1.2308 //16px
);

// 循环不同大小的字体工具类
@each $sizeKey,
$size in $font-sizes {
  .fs-#{$sizeKey} {
    font-size: $size*$base-font-size
  }
}

// flex布局
.d-flex {
  display: flex;
}

// flex-column
.flex-column {
  flex-direction: column;
}

// flex:justify-content
$flex-jc:(start:flex-start,
  end:flex-end,
  center:center,
  between:space-between,
  around:space-around,
);

@each $key,
$value in $flex-jc {
  .jc-#{$key} {
    justify-content: $value;
  }
}

// flex:align-items
$flex-ai:(start:flex-start,
  end:flex-end,
  center:center,
  stretch:stretch);

@each $key,
$value in $flex-ai {
  .ai-#{$key} {
    align-items: $value;
  }
}

// 自动撑满
.flex-1 {
  flex: 1
}

// spacing
$spacing-types:(m:margin, p:padding);
$spacing-directions:(t:top, r:right, b:bottom, l:left);
$spacing-base-size:1rem;
$spacing-sizes:(0:0, 1:0.25, 2:0.5, 3:1, 4:1.5, 5:3);

@each $typeKey,
$type in $spacing-types {

  // .m-1:margin:0.25rem
  @each $sizeKey,
  $size in $spacing-sizes {
    .#{$typeKey}-#{$sizeKey} {
      #{$type}: $size * $spacing-base-size
    }
  }

  @each $sizeKey,
  $size in $spacing-sizes {

    // .mx-1:margin-x:0.25rem
    .#{$typeKey}x-#{$sizeKey} {
      #{$type}-right: $size * $spacing-base-size;
      #{$type}-left: $size * $spacing-base-size;
    }

    // .my-1:margin-x:0.25rem
    .#{$typeKey}y-#{$sizeKey} {
      #{$type}-top: $size * $spacing-base-size;
      #{$type}-bottom: $size * $spacing-base-size;
    }
  }

  // .mt-1:margin-top:0.25rem
  @each $directionKey,
  $direction in $spacing-directions {

    @each $sizeKey,
    $size in $spacing-sizes {
      .#{$typeKey}#{$directionKey}-#{$sizeKey} {
        #{$type}-#{$direction}: $size * $spacing-base-size
      }
    }
  }

}